{
	"info": {
		"_postman_id": "bddb2602-1132-4dc8-b05e-f7c078e44e35",
		"name": "Pago",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40124253"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json();",
							"pm.globals.set(\"access_token\", response.token);",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/users/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"users",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear pago",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"pago_id\", data.id);\r",
							"\r",
							"const expectedCode = 201;\r",
							"pm.test(`Status code is ${expectedCode}`, function () {\r",
							"    pm.response.to.have.status(expectedCode);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"fecha\": \"2024-11-30\",\r\n  \"capital\": 5000,\r\n  \"interes\": 200\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/pagos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pagos"
					]
				}
			},
			"response": [
				{
					"name": "Crear pago",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fecha\": \"2024-11-30\",\r\n  \"capital\": 5000,\r\n  \"interes\": 200\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pagos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pagos"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\r\n    \"fecha\": \"2024-11-30\",\r\n    \"capital\": 5000,\r\n    \"interes\": 200,\r\n    \"id\": 22\r\n}"
				}
			]
		},
		{
			"name": "Get All Pagos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const expectedCode = 200;\r",
							"pm.test(`Status code is ${expectedCode}`, function () {\r",
							"    pm.response.to.have.status(expectedCode);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pagos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pagos"
					]
				}
			},
			"response": [
				{
					"name": "Get All Pagos",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pagos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pagos"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "[\r\n    {\r\n        \"id\": 1,\r\n        \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n        \"capital\": 5000,\r\n        \"interes\": 200\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n        \"capital\": 5000,\r\n        \"interes\": 200\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n        \"capital\": 5000,\r\n        \"interes\": 200\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n        \"capital\": 5000,\r\n        \"interes\": 200\r\n    },\r\n    {\r\n        \"id\": 5,\r\n        \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n        \"capital\": 5000,\r\n        \"interes\": 200\r\n    },\r\n    {\r\n        \"id\": 6,\r\n        \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n        \"capital\": 5000,\r\n        \"interes\": 200\r\n    },\r\n    {\r\n        \"id\": 8,\r\n        \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n        \"capital\": 5000,\r\n        \"interes\": 200\r\n    },\r\n    {\r\n        \"id\": 7,\r\n        \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n        \"capital\": 5000,\r\n        \"interes\": 200\r\n    },\r\n    {\r\n        \"id\": 9,\r\n        \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n        \"capital\": 5000,\r\n        \"interes\": 200\r\n    },\r\n    {\r\n        \"id\": 11,\r\n        \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n        \"capital\": 5000,\r\n        \"interes\": 200\r\n    },\r\n    {\r\n        \"id\": 10,\r\n        \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n        \"capital\": 5000,\r\n        \"interes\": 200\r\n    },\r\n    {\r\n        \"id\": 12,\r\n        \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n        \"capital\": 5000,\r\n        \"interes\": 200\r\n    },\r\n    {\r\n        \"id\": 13,\r\n        \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n        \"capital\": 5000,\r\n        \"interes\": 200\r\n    },\r\n    {\r\n        \"id\": 14,\r\n        \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n        \"capital\": 5000,\r\n        \"interes\": 200\r\n    },\r\n    {\r\n        \"id\": 15,\r\n        \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n        \"capital\": 5000,\r\n        \"interes\": 200\r\n    },\r\n    {\r\n        \"id\": 18,\r\n        \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n        \"capital\": 5000,\r\n        \"interes\": 200\r\n    },\r\n    {\r\n        \"id\": 17,\r\n        \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n        \"capital\": 5000,\r\n        \"interes\": 200\r\n    },\r\n    {\r\n        \"id\": 16,\r\n        \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n        \"capital\": 5000,\r\n        \"interes\": 200\r\n    },\r\n    {\r\n        \"id\": 21,\r\n        \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n        \"capital\": 5000,\r\n        \"interes\": 200\r\n    },\r\n    {\r\n        \"id\": 20,\r\n        \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n        \"capital\": 5000,\r\n        \"interes\": 200\r\n    },\r\n    {\r\n        \"id\": 19,\r\n        \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n        \"capital\": 5000,\r\n        \"interes\": 200\r\n    },\r\n    {\r\n        \"id\": 22,\r\n        \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n        \"capital\": 5000,\r\n        \"interes\": 200\r\n    }\r\n]"
				}
			]
		},
		{
			"name": "Get a Pago",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const expectedCode = 200;\r",
							"pm.test(`Status code is ${expectedCode}`, function () {\r",
							"    pm.response.to.have.status(expectedCode);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pagos/{{pago_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pagos",
						"{{pago_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Get a Pago",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pagos/{{pago_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pagos",
								"{{pago_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\r\n    \"id\": 22,\r\n    \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n    \"capital\": 5000,\r\n    \"interes\": 200\r\n}"
				}
			]
		},
		{
			"name": "Get a invalid pago",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const expectedCode = 404;\r",
							"pm.test(`Status code is ${expectedCode}`, function () {\r",
							"    pm.response.to.have.status(expectedCode);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pagos/123456",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pagos",
						"123456"
					]
				}
			},
			"response": [
				{
					"name": "Get a invalid pago",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pagos/123456",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pagos",
								"123456"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"The pago with the given id was not found\"\r\n}"
				}
			]
		},
		{
			"name": "Update a pago",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const expectedCode = 200;\r",
							"pm.test(`Status code is ${expectedCode}`, function () {\r",
							"    pm.response.to.have.status(expectedCode);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n    \"capital\": 10000,\r\n    \"interes\": 200\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/pagos/{{pago_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pagos",
						"{{pago_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Update a pago",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n    \"capital\": 10000,\r\n    \"interes\": 200\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pagos/{{pago_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pagos",
								"{{pago_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\r\n    \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n    \"capital\": 10000,\r\n    \"interes\": 200,\r\n    \"id\": 23\r\n}"
				}
			]
		},
		{
			"name": "Update a invalid pago",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const expectedCode = 404;\r",
							"pm.test(`Status code is ${expectedCode}`, function () {\r",
							"    pm.response.to.have.status(expectedCode);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n    \"capital\": 10000,\r\n    \"interes\": 200\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/pagos/123456",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pagos",
						"123456"
					]
				}
			},
			"response": [
				{
					"name": "Update a invalid pago",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"fecha\": \"2024-11-30T05:00:00.000Z\",\r\n    \"capital\": 10000,\r\n    \"interes\": 200\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pagos/123456",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pagos",
								"123456"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"The pago with the given id was not found\"\r\n}"
				}
			]
		},
		{
			"name": "Delete a pago",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const expectedCode = 204;\r",
							"pm.test(`Status code is ${expectedCode}`, function () {\r",
							"    pm.response.to.have.status(expectedCode);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pagos/{{pago_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pagos",
						"{{pago_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a pago",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pagos/{{pago_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pagos",
								"{{pago_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Delete a invalid pago",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const expectedCode = 404;\r",
							"pm.test(`Status code is ${expectedCode}`, function () {\r",
							"    pm.response.to.have.status(expectedCode);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/pagos/12345",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"pagos",
						"12345"
					]
				}
			},
			"response": [
				{
					"name": "Delete a invalid pago",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pagos/12345",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pagos",
								"12345"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": "{\r\n    \"statusCode\": 404,\r\n    \"message\": \"The pago with the given id was not found\"\r\n}"
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}